import{a as U,b as M,d as P}from"https://app.framerstatic.com/chunk-RV3ALOCZ.mjs";import{F as T,G as y,H as k,J as w,K as C,L,M as b}from"https://app.framerstatic.com/chunk-6RQGRTAF.mjs";import{b as u}from"https://app.framerstatic.com/chunk-SZHO3GJC.mjs";import{b as I}from"https://app.framerstatic.com/chunk-J5GSEMYU.mjs";import{o as l}from"https://app.framerstatic.com/chunk-FPS4GZUH.mjs";import{f as D}from"https://app.framerstatic.com/chunk-IHU2PUEH.mjs";import{l as R}from"https://app.framerstatic.com/chunk-5GP6FPZ7.mjs";import{a as S}from"https://app.framerstatic.com/chunk-ARMSKNUK.mjs";import{l as v,v as h}from"https://app.framerstatic.com/chunk-CQ6F5PRQ.mjs";import{a as o}from"https://app.framerstatic.com/chunk-WNSBRACC.mjs";import{a as g}from"https://app.framerstatic.com/chunk-LQILWJHN.mjs";import{j as s}from"https://app.framerstatic.com/chunk-AHQIRSXG.mjs";var m=h("RemoteConnection"),H=1e3,p=class extends u{constructor(e){super();s(this,"isReconnect",!1);s(this,"messageQueue",[]);s(this,"baseURL");s(this,"socket");s(this,"stats");this.baseURL=P(e)}createPingInterval(e,n){return setInterval(()=>{if(o(this.socket===e,"Invalid socket"),o(this.stats===n,"Invalid stats"),performance.now()-n.lastSend()<H||n.pendingCount("ping")>0)return;let t="ping {}";e.send(t),n.sent("ping",t)},H)}connect(e){if(this.socket)return;let n=new URL(this.baseURL);n.searchParams.set("v",String(y)),n.searchParams.set("tunnel",S()??""),n.searchParams.set("treeSchema",String(l)),n.searchParams.set("treeVersion",String(e));let t=new WebSocket(n),a=new T;this.socket=t,this.stats=a,m.debug("Connecting:",t.url);let r;t.addEventListener("open",()=>{o(this.socket===t,"Invalid socket"),o(this.stats===a,"Invalid stats"),m.debug("Connected:",t.url),r=this.createPingInterval(t,a),this.emit("connect",this.isReconnect),this.isReconnect=!0,this.flushMessageQueue(t,a)}),t.addEventListener("message",i=>{o(this.socket===t,"Invalid socket"),o(this.stats===a,"Invalid stats");let c=i.data,d=C(c);if(a.received(c),d.type==="ack")return a.acked();d.type==="redirect"&&(this.baseURL=d.value.url),m.trace("Received:",d),this.emit("message",d)}),t.addEventListener("close",i=>{o(this.socket===t,"Invalid socket"),o(this.stats===a,"Invalid stats"),clearInterval(r);let c=w(i);m.debug("Disconnected:",c),this.socket=void 0,this.stats=void 0,this.emit("disconnect",c)})}disconnect(){this.socket?.close()}flushMessageQueue(e,n){if(e.readyState===WebSocket.OPEN){for(let{type:t,value:a}of this.messageQueue)try{let r=JSON.stringify(a),i=`${t} ${r}`;e.send(i),n.sent(t,i)}catch(r){m.warn("Error sending:",t,r)}this.messageQueue.length=0}}send(e){this.messageQueue.push(e),this.socket&&this.stats&&this.flushMessageQueue(this.socket,this.stats)}sendMessage(e){this.send(e)}onMessage(e){return this.on("message",e),()=>{this.off("message",e)}}};var E=h("remote:project"),N=100,j=class extends u{constructor(e,n,t){super();this.timeline=e;this.userId=n;this.projectId=t;s(this,"connection");s(this,"treeDataHandler");s(this,"api");s(this,"modulesAPI");s(this,"assetService");s(this,"reconnectTimeout");s(this,"documentLoader");s(this,"shouldReconnect",!0);s(this,"postponedLastUpdate");s(this,"handleError",e=>{E.warn("Permanent error:",e),this.emit("disconnect","ClientSidePermanentError")});s(this,"handleRecoverableError",()=>{this.emit("disconnect","ClientSidePermanentError")});s(this,"handleUpdateProcessed",e=>{this.emit("update",e)});this.connection=new p(this.projectId),this.api=new M(this.connection,this.projectId),this.assetService=new R(this.api),this.modulesAPI=new U(this.api,this.connection),this.connection.on("disconnect",this.onDisconnect,this),this.connection.on("message",this.onMessage,this),this.assetService.refresh().catch(v)}createDataHandler({crdt:e}){let n={error:this.handleError,errorRecoverable:this.handleRecoverableError,updateProcessed:this.handleUpdateProcessed};return e?new L(this.timeline,this.userId,this.projectId,n):new b(this.timeline,this.projectId,n)}connect(){let e=this.treeDataHandler?.treeVersion??0;this.connection.connect(e),this.timeline.setOnline(!0),this.shouldReconnect=!0}disconnect(){this.shouldReconnect=!1,this.cancelReconnect(),this.connection.disconnect(),this.timeline.setOnline(!1)}maybeSend(){this.postponedLastUpdate&&(clearTimeout(this.postponedLastUpdate),this.postponedLastUpdate=void 0);let e=this.treeDataHandler?.maybeSend(this.connection)??"postpone";e==="postpone"&&(this.postponedLastUpdate=setTimeout(()=>this.maybeSend(),N)),e==="didSend"&&D("editor_bar_interaction",{page:"editor-bar-project-page",id:"editor-bar-tree-update"})}cancelReconnect(){clearTimeout(this.reconnectTimeout),this.reconnectTimeout=void 0}scheduleReconnect(e){this.cancelReconnect(),this.reconnectTimeout=setTimeout(()=>{this.reconnectTimeout=void 0,this.connect()},e)}onDisconnect(e){if(this.treeDataHandler=void 0,this.shouldReconnect||E.warn("Disconnect:",e),this.shouldReconnect&&k(e)){let n=V(e);this.scheduleReconnect(n)}}onMessage(e){switch(e.type){case"treeMessage":return this.handleTreeMessage(e.value);case"treeUpdate":return this.handleTreeUpdate(e.value);case"rows":return this.handleRows(e.id,e.value);case"confirmRows":return this.handleConfirmRows(e.value.seq);case"notifyProjectChange":switch(e.value.waitForRestart&&I({icon:"reconnecting",duration:1/0,showCloseButton:"never",type:"add",variant:"progress",text:"Waiting for project restart after canvas features changed"}),e.value.scope){case"assets":return this.assetService.refresh();case"assetsInvalidated":return this.assetService.refreshFully();default:return}}}handleTreeMessage(e){if(e.type!=="init")return;let n=g(),t=new URL(e.data.file,n.app);this.treeDataHandler||(this.treeDataHandler=this.createDataHandler({crdt:t.pathname.endsWith("crdt")})),this.treeDataHandler.handleInit(e.data.treeVersion,e.data.initialUpdates).needsDownload&&this.downloadDocument(t.href,e.data.treeVersion)}handleTreeUpdate(e){o(this.treeDataHandler,"Cannot handle remote updates before init"),this.treeDataHandler.handleTreeUpdate(e),this.treeDataHandler.processRemoteUpdates()}handleRows(e,n){o(this.treeDataHandler,"Cannot handle remote updates before init"),this.treeDataHandler.handleRows(e,n),this.treeDataHandler.processRemoteUpdates()}handleConfirmRows(e){o(this.treeDataHandler,"Cannot handle remote updates before init"),this.treeDataHandler.handleConfirmRows(e)}downloadDocument(e,n){let t=this.treeDataHandler;o(t?.waitingForTree,"Must be waiting for tree"),this.documentLoader&&(this.documentLoader.scheduler.cancel(),this.documentLoader.removeAllListeners());let a={partialParsing:!0,loadInBackground:!0,async refreshAccessToken(i){return{...i,credentials:"include"}}},r=t.createLoader(e,n,a);this.documentLoader=r,r.on("loadedFirstData",i=>{i.setService("metadata",{projectId:this.projectId}),r.pauseLoadingScopes();let c={isLoading:!0};t.setTree(i,n,c),t.processRemoteUpdates(),r.canvasTreeVersion<l&&this.emit("disconnect","ClientTooNew"),r.canvasTreeVersion>l&&this.emit("disconnect","ClientNeedsUpdate")}),r.on("loadedAllData",()=>{t.loadedAllScopes(),this.emit("update",this.timeline.tree)}),r.on("loadedScope",i=>{t.loadOneScope(i,!1),this.emit("update",this.timeline.tree)}),r.start().catch(v)}};function V(f){return f==="ReconnectToNewServer"?25:1e3}export{j as a};
//# sourceMappingURL=https://app.framerstatic.com/chunk-Y5BVUKTS.mjs.map
